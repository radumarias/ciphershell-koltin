-- Define the Vaults table with an auto-incrementing primary key
CREATE TABLE `Vaults` (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    path TEXT NOT NULL,
    mount TEXT NOT NULL,
    createdTime TEXT DEFAULT (CURRENT_TIMESTAMP),
    modifiedTime TEXT DEFAULT (CURRENT_TIMESTAMP)
);

DROP TRIGGER IF EXISTS update_modified_timestamp_trigger;
CREATE TRIGGER IF NOT EXISTS update_modified_timestamp_trigger
BEFORE UPDATE ON Vaults
FOR EACH ROW
BEGIN
    UPDATE Vaults SET modifiedTime = CURRENT_TIMESTAMP;
END;


-- Insert a new vault
insertVault:
INSERT INTO Vaults (name, path, mount)
VALUES (?, ?, ?);

-- Retrieve the ID of the last inserted row
selectLastInsertId:
SELECT last_insert_rowid() AS id;

-- Update an existing vault by its ID
updateVault:
UPDATE Vaults
SET name = ?, path = ?, mount = ?
WHERE id = ?;

-- Delete a vault by its ID
deleteVault:
DELETE FROM Vaults
WHERE id = ?;

-- Select all vaults ordered by name (or any other criteria you want)
selectAll:
SELECT * FROM Vaults
ORDER BY modifiedTime ASC;

-- Select vaults with pagination support, ordered by name
selectVaultsPaged:
SELECT * FROM Vaults
ORDER BY modifiedTime ASC
LIMIT ? OFFSET ?;
